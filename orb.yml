version: 2.1
description: >
  Sonatype Nexus Platform Integration. This Orb allows publishing of build
  artifacts to Nexus Repository Manager instances. The source for this Orb is
  available at: https://github.com/sonatype-nexus-community/circleci-nexus-orb

executors:
  default:
    description: "CircleCI image for OpenJDK"
    docker:
    - image: circleci/openjdk
  sonatype:
    description: "Sonatype image with Nexus Platform CLI"
    docker:
    - image: fernau/publishtest:0.0.2

commands:
  install:
    description: "Installs the nexus-platform-api and CLI script"
    parameters:
      groovy-version:
        description: "Version of Apache groovy to download and install"
        type: string
        default: "2.5.3"
    steps:
    # TODO: when NexusPublisher.groovy script has a released version update the curl command below accordingly
    - run: |
        curl -L https://dl.bintray.com/groovy/maven/apache-groovy-binary-<< parameters.groovy-version >>.zip -o apache-groovy-binary.zip
        curl -L https://raw.githubusercontent.com/sonatype-nexus-community/circleci-nexus-orb/master/cli/src/main/groovy/NexusPublisher.groovy -o NexusPublisher.groovy
        unzip apache-groovy-binary.zip
        mv groovy-<< parameters.groovy-version >> groovy

  publish:
    description: "Publishes artifacts to Nexus Repository Manager"
    parameters:
      username:
        description: "Username to access Nexus Repository Manager"
        type: string
        default: "${NEXUS_RM_USERNAME}"
      password:
        description: "Password to access Nexus Repository Manager"
        type: string
        default: "${NEXUS_RM_PASSWORD}"
      serverurl:
        description: "Nexus Repository Manager Server URL"
        type: string
        default: "${NEXUS_RM_SERVERURL}"
      filename:
        description: "Path of file to publish"
        type: string
      format:
        description: "Format of artifact to publish"
        type: string
        default: "maven2"
      attributes:
        description: "Component coordinates and Asset attributes"
        type: string
      repository:
        description: "Target repository name"
        type: string
        default: "maven-releases"

    steps:
    - attach_workspace:
        at: /tmp/workspace
    - run: >
        groovy/bin/groovy NexusPublisher.groovy
        --username << parameters.username >>
        --password << parameters.password >>
        --serverurl << parameters.serverurl >>
        --filename << parameters.filename >>
        --format << parameters.format >>
        --repository << parameters.repository >>
        << parameters.attributes >>

jobs:
  nexusjob:
    description: "Publish artifacts to Nexus Respository Manager"
    parameters:
      username:
        description: "Username to access Nexus Repository Manager"
        type: string
        default: "${NEXUS_RM_USERNAME}"
      password:
        description: "Password to access Nexus Repository Manager"
        type: string
        default: "${NEXUS_RM_PASSWORD}"
      serverurl:
        description: "Nexus Repository Manager Server URL"
        type: string
        default: "${NEXUS_RM_SERVERURL}"
      filename:
        description: "Path of file to publish"
        type: string
      format:
        description: "Format of artifact to publish"
        type: string
        default: "maven2"
      attributes:
        description: "Component coordinates and Asset attributes"
        type: string
      repository:
        description: "Target repository name"
        type: string
        default: "maven-releases"
      groovy-version:
        description: "Version of Apache groovy to download and install"
        type: string
        default: "2.5.3"
    executor: default
    steps:
    - install:
      groovy-version: << parameters.groovy-version >>
    - publish:
        username: << parameters.username >>
        password: << parameters.password >>
        serverurl: << parameters.serverurl >>
        filename:  << parameters.filename >>
        format: << parameters.format >>
        attributes: << parameters.attributes >>
        repository: << parameters.repository >>
