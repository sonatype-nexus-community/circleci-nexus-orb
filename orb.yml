version: 2.1
description: >
  Sonatype Nexus Platform Integration. This Orb allows publishing of build
  artifacts to Nexus Repository Manager instances. The source for this Orb is
  available at: https://github.com/sonatype-nexus-community/circleci-nexus-orb

executors:
  default:
    description: "CircleCI image for OpenJDK"
    docker:
    - image: circleci/openjdk

commands:
  install:
    description: "Installs the nexus-platform-api and CLI script"
    parameters:
      groovy-version:
        description: "Version of Apache groovy to download and install"
        type: string
        default: "2.5.3"
    steps:
    - run: |
        curl -L https://dl.bintray.com/groovy/maven/apache-groovy-binary-<< parameters.groovy-version >>.zip -o apache-groovy-binary.zip
        curl -L https://raw.githubusercontent.com/sonatype-nexus-community/circleci-nexus-orb/master/cli/src/main/groovy/NexusPublisher.groovy -o NexusPublisher.groovy
        unzip apache-groovy-binary.zip
        mv groovy-<< parameters.groovy-version >> groovy

  publish:
    description: "Publishes artifacts to Nexus Repository Manager"
    parameters:
      username:
        description: "Username to access Nexus Repository Manager"
        type: string
        default: "${NEXUS_RM_USERNAME}"
      password:
        description: "Password to access Nexus Repository Manager"
        type: string
        default: "${NEXUS_RM_PASSWORD}"
      serverurl:
        description: "Nexus Repository Manager Server URL"
        type: string
        default: "${NEXUS_RM_SERVERURL}"
      filename:
        description: "Path of file to publish"
        type: string
      format:
        description: "Format of artifact to publish"
        type: string
        default: "maven2"
      attributes:
        description: "Component coordinates and Asset attributes"
        type: string
      repository:
        description: "Target repository name"
        type: string
        default: "maven-releases"
      attach-workspace-at:
        description: "Path to workspace attachment point"
        type: string
        default: ""

    steps:
    - when:
        condition: << parameters.attach-workspace-at >>
        steps:
          - attach_workspace:
              at: << parameters.attach-workspace-at >>
    - run: >
        groovy/bin/groovy NexusPublisher.groovy
        --username << parameters.username >>
        --password << parameters.password >>
        --serverurl << parameters.serverurl >>
        --filename << parameters.filename >>
        --format << parameters.format >>
        --repository << parameters.repository >>
        << parameters.attributes >>

jobs:
  nexusjob:
    description: "Publish artifacts to Nexus Respository Manager"
    parameters:
      username:
        description: "Username to access Nexus Repository Manager"
        type: string
        default: "${NEXUS_RM_USERNAME}"
      password:
        description: "Password to access Nexus Repository Manager"
        type: string
        default: "${NEXUS_RM_PASSWORD}"
      serverurl:
        description: "Nexus Repository Manager Server URL"
        type: string
        default: "${NEXUS_RM_SERVERURL}"
      filename:
        description: "Path of file to publish"
        type: string
      format:
        description: "Format of artifact to publish"
        type: string
        default: "maven2"
      attributes:
        description: "Component coordinates and Asset attributes"
        type: string
      repository:
        description: "Target repository name"
        type: string
        default: "maven-releases"
      groovy-version:
        description: "Version of Apache groovy to download and install"
        type: string
        default: "2.5.3"
    executor: default
    steps:
    - install:
      groovy-version: << parameters.groovy-version >>
    - publish:
        username: << parameters.username >>
        password: << parameters.password >>
        serverurl: << parameters.serverurl >>
        filename:  << parameters.filename >>
        format: << parameters.format >>
        attributes: << parameters.attributes >>
        repository: << parameters.repository >>

examples:
  publish_java:
    description: "Example builds and publishes java artifact"
    usage:
      version: 2.1
      jobs: # a collection of steps
        build: # runs not using Workflows must have a `build` job as entry point

          docker: # run the steps with Docker
          - image: circleci/openjdk:8-jdk-browsers # ...with this image as the primary container; this is where all `steps` will run

          steps: # a collection of executable commands

          - checkout # check out source code to working directory

          - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
              key: publish-demo-{{ checksum "pom.xml" }}

          - run: mvn dependency:go-offline # gets the project dependencies

          - save_cache: # saves the project dependencies
              paths:
              - ~/.m2
              key: publish-demo-{{ checksum "pom.xml" }}

          - run: mvn package # run the actual tests

          - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
              path: target/surefire-reports

          - store_artifacts: # store the uberjar as an artifact
              path: target/test1-1.0-SNAPSHOT.jar

          - nexus-orb/install # install Sonatype Nexus Repository Manager client

          - nexus-orb/publish: # publish artifact
              filename: "target/test1-1.0-SNAPSHOT.jar" # same filename as in step store_artifacts above
              attributes: "-CgroupId=com.example -CartifactId=myapp -Cversion=1.0 -Aextension=jar"
              username: "admin"     # in production use environment variable $NEXUS_RM_USERNAME
              password: "admin123"  # in production use environment variable $NEXUS_RM_PASSWORD
              serverurl: "http://example.com:8081/" # or environment variable $NEXUS_RM_USERNAME
